{"componentChunkName":"component---src-pages-thoughts-mdx-slug-js","path":"/thoughts/working-with-messy-data/","result":{"data":{"mdx":{"frontmatter":{"title":"Working with Messy Data","short":"\nThis week I spent some time thinking about what data I want in my data warehouse.\n","keywords":"data science programming, datascientist, job of data scientist, data driven insights, data driven solutions","hero_alt":"Working with Messy Data","date":"April 28, 2018","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#082858","images":{"fallback":{"src":"/static/f4e9cfc127c9a1887bab551039596f6b/87706/data_savvy_6.png","srcSet":"/static/f4e9cfc127c9a1887bab551039596f6b/f80f8/data_savvy_6.png 320w,\n/static/f4e9cfc127c9a1887bab551039596f6b/9a63f/data_savvy_6.png 640w,\n/static/f4e9cfc127c9a1887bab551039596f6b/87706/data_savvy_6.png 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/f4e9cfc127c9a1887bab551039596f6b/c0bcc/data_savvy_6.webp 320w,\n/static/f4e9cfc127c9a1887bab551039596f6b/17574/data_savvy_6.webp 640w,\n/static/f4e9cfc127c9a1887bab551039596f6b/71d4d/data_savvy_6.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1280,"height":720}}}},"slug":"working-with-messy-data","body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Working with Messy Data\",\n  \"date\": \"2018-04-28\",\n  \"hero_image\": \"./media/data_savvy_6.png\",\n  \"hero_alt\": \"Working with Messy Data\",\n  \"expertise\": \"Data Science\",\n  \"author\": \"Rho Lall\",\n  \"keywords\": \"data science programming, datascientist, job of data scientist, data driven insights, data driven solutions\",\n  \"short\": \"\\nThis week I spent some time thinking about what data I want in my data warehouse.\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This week I spent some time thinking about what data I want in my data warehouse. A big piece of what I want is a birds eye view of what my social networks are talking about. I\\u2019d like to see a pie chart with the percent of the conversation related to sports, news, politics, Netflix, or just life in general. I\\u2019d like to be able to drill down on those conversations where I might add my two cents. I\\u2019ve tried listening on social media with Hootsuite and I didn\\u2019t get very far. I wasted a lot of time. For now, my first data warehouse is going to focus on social media.\"), mdx(\"p\", null, \"That requires using APIs, web scraping, and NLP (natural language processing) for starters.\"), mdx(\"p\", null, \"Also, this week at work I started a data mining project which involves NLP.\"), mdx(\"p\", null, \"Time to dust off my NLP essentials course. I thought my first real python based project would be similar to the Titanic dataset i worked with. Oh well. There goes that.\"), mdx(\"h2\", null, \"NLP Essentials\"), mdx(\"p\", null, \"Natural Language Processing deals with data that isn't necessarily in neat columns and rows: like email, reviews, social media posts, etc. You need to be able to parse through the tags and html. \"), mdx(\"p\", null, mdx(\"del\", {\n    parentName: \"p\"\n  }, \"Below is some code that I want to hold onto for later. I've tried several strategies for posting my notebook code into wordpress. This is my first attempt. It's not pretty. It's an image that links out to a Kaggle Kernals. You can fork it there.\")), mdx(\"p\", null, \"Small Edit, I am just \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.kaggle.com/assumewisely/nlp-working-with-messy-data\"\n  }, \"linking out to Kaggle\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4a1b034a-4815-59b2-9681-5628bec502eb","slug":"working-with-messy-data","__params":{"slug":"working-with-messy-data"}}},"staticQueryHashes":["1609057278"]}